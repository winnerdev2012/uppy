# N.B.: This won't run on releases because of
# https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow.
# However, we have a companion deploy that's part of the release.yml workflow.
name: Companion Edge Deploy

on:
  push:
    branches: [ 'main' ]
    paths:
      - yarn.lock
      - 'packages/@uppy/companion/**'
      - '.github/workflows/companion.yml'

jobs:
  npm:
    name: Generate npm tarball
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Set SHA commit in version
        run: (cd packages/@uppy/companion && node -e 'const pkg=require("./package.json");pkg.version+="+${{ github.sha }}";fs.writeFileSync("package.json",JSON.stringify(pkg, undefined, 2)+"\n")')
      - name: Create Companion tarball
        run: corepack yarn workspace @uppy/companion pack --install-if-needed -o /tmp/companion-${{ github.sha }}.tar.gz
      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: companion-${{ github.sha }}.tar.gz
          path: /tmp/companion-${{ github.sha }}.tar.gz

  docker:
    name: DockerHub
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 0
      COMPOSE_DOCKER_CLI_BUILD: 0
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: transloadit/companion
          tags: |
            type=edge
            type=raw,value=latest,enable=false
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          platforms: linux/amd64,linux/arm64
          file: Dockerfile
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
