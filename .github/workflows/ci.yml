name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    # We want all branches so we configure types to be the GH default again
    types: [ opened, synchronize, reopened ]

jobs:
  unit_tests:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(corepack yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
      - name: Install dependencies
        run: corepack yarn install --immutable
      - name: Run tests
        run: corepack yarn run test:unit

  lint_js:
    name: Lint JavaScript/TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(corepack yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install dependencies
        run: corepack yarn install --immutable
      - name: Run linter
        run: corepack yarn run lint

  lint_md:
    name: Lint Markdown
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(corepack yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install dependencies
        run: corepack yarn install --immutable
      - name: Run linter
        run: corepack yarn run lint:markdown

  types:
    name: Type tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(corepack yarn config get cacheFolder)"

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: Install dependencies
        run: corepack yarn install --immutable
        # Need to do a bunch of work to generate the locale typings ðŸ™ƒ
      - name: Prepare type declarations
        run: |
          corepack yarn run build:lib
          corepack yarn run build:companion
          corepack yarn run build:locale-pack
      - name: Run type tests
        run: corepack yarn run test:type
